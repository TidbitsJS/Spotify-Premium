{"version":3,"sources":["components/CardData.js","components/Slider.js","components/FreeContext.js","components/Cards.js","App.js","serviceWorker.js","index.js"],"names":["premiumFamily","background","cardhead","top","bottom","terms","button","price","prePaidFamily","premiumIndividual","premiumPrepaid","premiumStudent","premiumDuo","slideImages","Slideshow","className","src","alt","Component","FreeContext","style","color","fontSize","textTransform","Cards","cardData","this","props","console","log","textAlign","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c25712d0.chunk.js","sourcesContent":["export const premiumFamily = {\n    background: 'linear-gradient(to right, #00d2ff, #3a7bd5)',\n    cardhead: 'Premium Family',\n    top: 'Free',\n    bottom: 'for 1 month',\n    terms: `Up to 6 premium accounts. \n            Family Mix: shared playlist. \n            Block explicit music. \n            Ad-free music. \n            Download to listen ofline. \n            Unlimited skips. \n            On-demand playback. \n            Cancel anytime`,\n    button: 'try 1 month free',\n    price: `Only $179/month after. \n            For up to 6 family members living at the same address.`\n   \n}\n\nexport const prePaidFamily = {\n    background: 'linear-gradient(to right, #e53935, #e35d5b)',\n    cardhead: 'Prepaid  premium family',\n    top: 'From $595',\n    bottom: 'for 3 months',\n    terms: `Choose three, six or twelve months of Premium. \n            Pay with Paythm or UPI. \n            Top up when you want`,\n    button: 'Get Premium Family',\n    price: `Prices vary according to duration of plan.`\n}\n\nexport const premiumIndividual = {\n    background: 'linear-gradient(to left, #11998e, #38ef7d)',\n    cardhead: 'Premium Individual',\n    top: 'Free',\n    bottom: 'for 1 month',\n    terms: `Ad-free music. \n            Download to listen offline. \n            Unlimited skips. \n            On-demand playback. \n            Cancel anytime`,\n    button: 'try 1 month free',\n    price: 'Only $119/month after offer period. Cancel anytime.'\n}\n\nexport const premiumPrepaid = {\n    background: ' linear-gradient(to right, #9d50bb, #6e48aa)',\n    cardhead: 'Premium Prepaid',\n    top: 'From $13',\n    bottom: '/Day',\n    terms: `Choose a day, week or month of Premium. \n            Pay with PayTM or UPI.\n            Top up when you want`,\n    button: 'Get Premium',\n    price: 'Prices vary according to duration of plan.'\n}\n\nexport const  premiumStudent = {\n    background: 'linear-gradient(to right, #f46b45, #eea849)',\n    cardhead: 'Premium Student',\n    top: 'Free',\n    bottom: 'For 1 month',\n    terms: `Ad-free music.\n            Download to listen offline. \n            Unlimited skips. \n            On-demand playback. \n            Cancel anytime`,\n    button: 'try 1 month free',\n    price: 'Only $59/month after offer period. Cancel anytime. '\n}\n\nexport const premiumDuo = {\n    background: 'linear-gradient(to left bottom, #ff005f, #ff347c, #ff5097, #fd68b0, #f87dc5)',\n    cardhead: 'Premium Duo',\n    top: 'Free',\n    bottom: 'for 1 month',\n    terms: `2 Premium accounts. \n            Duo Mix: shared playlist of two. \n            Ad-free music. \n            Download to listen offline. \n            Unlimited skips. \n            On-demand playback. \n            Cancel anytime`,\n    button: 'try 1 month free',\n    price: 'Only $149/month after. For two people who live at the same address. '\n}","import React, { Component } from 'react'\nimport { Fade } from 'react-slideshow-image'\nimport 'react-slideshow-image/dist/styles.css'\n\nconst slideImages = [\n    'https://images.unsplash.com/photo-1579460373382-a4a855d3ad52?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=751&q=80',\n    'https://images.unsplash.com/photo-1580943942792-63264a446b45?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80',\n    'https://images.unsplash.com/photo-1492390195956-15fd4c9d0133?ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80'\n]\n\nclass Slideshow extends Component {\n    render() {\n    return (\n      <div className=\"sliderContainer\">\n        <Fade>\n          <div className=\"each-fade\">\n              <img src={slideImages[0]} alt=\"images\" />\n          </div>\n          <div className=\"each-fade\">\n              <img src={slideImages[1]}  alt=\"images\"/>\n          </div>\n          <div className=\"each-fade\">\n              <img src={slideImages[2]} alt=\"images\" />\n          </div>\n        </Fade>\n      </div>\n    )\n  } \n};\n\n\nexport default Slideshow\n","import React, { Component } from 'react'\n\nclass FreeContext extends Component {\n    render() {\n        return (\n            <div className=\"free\">\n                <h5>Get Premium</h5>\n                <p>Only $119/month after offer period. Cancel anytime. \n                    <span>Terms and conditions</span> apply.\n                </p>\n                <div className=\"small-bar\">\n                    <div style={{ color:\"white\", fontSize: 25 }}>Spotify Free</div>\n                    <div style={{ fontSize: 15, color:'#fafafa', textTransform: 'uppercase'}}>Current Plan</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FreeContext\n","import React, { Component } from 'react'\n\nclass Cards extends Component {\n    \n    render() {\n    \n    const { cardData } = this.props\n    console.log(cardData.top);\n    \n        return (\n            <div className=\"mainCard\">\n            <div className=\"uiCard\" style={{ background:cardData.background }}>\n                <div className=\"card-start\">\n                    <div className=\"card-head\"> {cardData.cardhead} </div>\n                    <div className=\"card-plan\">\n                        <p className=\"top\"> {cardData.top} </p>\n                        <p className=\"bottom\" style={{textTransform:'uppercase', color:'rgba(255,255,255,0.75)', fontSize: 12, textAlign: 'right'}} > {cardData.bottom} </p>\n                    </div>\n                </div>\n                <div className=\"card-terms\">\n                    <p> {cardData.terms} </p>\n                </div>\n                <div className=\"card-btn\">\n                    <button> {cardData.button} </button>\n                </div>\n                <div className=\"card-price\">\n                    {cardData.price}                    \n                   <p> <span> Terms and conditions</span> apply </p> \n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Cards\n","import React from 'react'\nimport 'App.css'\nimport { premiumFamily, prePaidFamily, \n         premiumIndividual, premiumPrepaid,\n         premiumStudent, premiumDuo } from 'components/CardData'\nimport Slideshow from 'components/Slider';\nimport FreeContext from 'components/FreeContext';\nimport Cards from 'components/Cards';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"header\"><h1>Try Premium free for 1 month</h1></div>\n      <Slideshow />\n      <FreeContext />\n      <Cards cardData={premiumFamily} />\n      <Cards cardData={prePaidFamily} />\n      <Cards cardData={premiumIndividual} />\n      <Cards cardData={premiumPrepaid} />\n      <Cards cardData={premiumStudent} />\n      <Cards cardData={premiumDuo} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}